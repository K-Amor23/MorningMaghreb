name: Automated Data Pipeline

on:
  schedule:
    # Run every 6 hours
    - cron: '0 */6 * * *'
  workflow_dispatch: # Allow manual triggers
  push:
    branches: [ main ]
    paths:
      - 'apps/backend/airflow/dags/**'
      - 'scripts/**'
      - 'database/**'

jobs:
  deploy-and-run-pipeline:
    runs-on: ubuntu-latest
    env:
      NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
      SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
      VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
      VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: apps/web/package-lock.json
        
    - name: Install Python dependencies
      run: |
        cd apps/backend
        pip install -r requirements.txt
    
    - name: Lint Airflow DAGs (pyflakes)
      run: |
        pip install pyflakes
        python -m pyflakes airflow-docker/dags || true
        
    - name: Install Node.js dependencies
      run: |
        cd apps/web
        npm ci
        
    - name: Deploy to Supabase (optional)
      if: ${{ env.NEXT_PUBLIC_SUPABASE_URL != '' && env.SUPABASE_SERVICE_ROLE_KEY != '' }}
      run: |
        if [ -f scripts/deploy_master_pipeline_tables.py ]; then
          python scripts/deploy_master_pipeline_tables.py
        else
          echo "No deploy script found (scripts/deploy_master_pipeline_tables.py). Skipping."
        fi
        
    - name: Run Pipeline Tasks (mock)
      if: ${{ env.NEXT_PUBLIC_SUPABASE_URL != '' && env.SUPABASE_SERVICE_ROLE_KEY != '' }}
      run: |
        python - <<'PY'
        from datetime import datetime
        mock_companies = [{"ticker":"ATW","company_name":"Attijariwafa Bank","price":410.10,"change_1d_percent":0.31,"date":datetime.now().strftime('%Y-%m-%d')}]
        mock_indices = [{"index_name":"MASI","value":12580.45,"change_1d_percent":0.85,"date":datetime.now().strftime('%Y-%m-%d')}]
        print('✅ Pipeline executed (mock)')
        print(f'📊 Updated {len(mock_companies)} companies')
        print(f'📈 Updated {len(mock_indices)} indices')
        PY
        
    - name: Deploy to Vercel (optional)
      if: ${{ env.VERCEL_TOKEN != '' && env.VERCEL_ORG_ID != '' && env.VERCEL_PROJECT_ID != '' }}
      uses: amondnet/vercel-action@v25
      with:
        vercel-token: ${{ env.VERCEL_TOKEN }}
        vercel-org-id: ${{ env.VERCEL_ORG_ID }}
        vercel-project-id: ${{ env.VERCEL_PROJECT_ID }}
        working-directory: ./apps/web
        
    - name: Notify on Success
      if: success()
      run: |
        echo "✅ Pipeline completed successfully at $(date)"
        echo "🌐 Site deployed to: https://morningmaghreb.com"
        
    - name: Notify on Failure
      if: failure()
      run: |
        echo "❌ Pipeline failed at $(date)"
