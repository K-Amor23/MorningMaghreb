version: "3.8"
services:
  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    volumes:
      - postgres-db-volume:/var/lib/postgresql/data
  redis:
    image: redis:latest
    expose:
      - 6379
  airflow-webserver:
    image: apache/airflow:2.8.1-python3.11
    depends_on:
      - postgres
      - redis
    env_file:
      - ../.env.local
    command: bash -c "pip install -r /opt/airflow/requirements.txt && airflow db upgrade && airflow webserver"
    environment:
      - AIRFLOW__CORE__EXECUTOR=CeleryExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres/airflow
      - AIRFLOW__CELERY__RESULT_BACKEND=db+postgresql://airflow:airflow@postgres/airflow
      - AIRFLOW__CELERY__BROKER_URL=redis://:@redis:6379/0
      - AIRFLOW__CORE__FERNET_KEY=mLl9wE5h4nx8hwjdNztweHE3L-dm-WIRxGe36SrlYRs=
      - AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION=True
      - AIRFLOW__CORE__LOAD_EXAMPLES=False
      - PGSSLMODE=disable

    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
      - ../../apps/backend:/opt/airflow/apps/backend
      - ../../scripts:/opt/airflow/scripts
      - ../../.env.local:/opt/airflow/.env.local
      - ./requirements.txt:/opt/airflow/requirements.txt
    ports:
      - "8080:8080"
    healthcheck:
      test: [ "CMD", "curl", "--fail", "http://localhost:8080/health" ]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
  airflow-scheduler:
    image: apache/airflow:2.8.1-python3.11
    depends_on:
      - postgres
      - redis
    env_file:
      - ../.env.local
    command: bash -c "pip install -r /opt/airflow/requirements.txt && airflow db upgrade && airflow scheduler"
    environment:
      - AIRFLOW__CORE__EXECUTOR=CeleryExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres/airflow
      - AIRFLOW__CELERY__RESULT_BACKEND=db+postgresql://airflow:airflow@postgres/airflow
      - AIRFLOW__CELERY__BROKER_URL=redis://:@redis:6379/0
      - AIRFLOW__CORE__FERNET_KEY=mLl9wE5h4nx8hwjdNztweHE3L-dm-WIRxGe36SrlYRs=
      - AIRFLOW__CORE__LOAD_EXAMPLES=False
      - PGSSLMODE=disable

    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ../../apps/backend:/opt/airflow/apps/backend
      - ../../scripts:/opt/airflow/scripts
      - ../../.env.local:/opt/airflow/.env.local
      - ./requirements.txt:/opt/airflow/requirements.txt
  airflow-worker:
    image: apache/airflow:2.8.1-python3.11
    depends_on:
      - postgres
      - redis
    env_file:
      - ../.env.local
    command: bash -c "pip install -r /opt/airflow/requirements.txt && airflow db upgrade && airflow celery worker"
    environment:
      - AIRFLOW__CORE__EXECUTOR=CeleryExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres/airflow
      - AIRFLOW__CELERY__RESULT_BACKEND=db+postgresql://airflow:airflow@postgres/airflow
      - AIRFLOW__CELERY__BROKER_URL=redis://:@redis:6379/0
      - AIRFLOW__CORE__FERNET_KEY=mLl9wE5h4nx8hwjdNztweHE3L-dm-WIRxGe36SrlYRs=
      - AIRFLOW__CORE__LOAD_EXAMPLES=False
      - PGSSLMODE=disable

    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ../../apps/backend:/opt/airflow/apps/backend
      - ../../scripts:/opt/airflow/scripts
      - ../../.env.local:/opt/airflow/.env.local
      - ./requirements.txt:/opt/airflow/requirements.txt
volumes:
  postgres-db-volume:
